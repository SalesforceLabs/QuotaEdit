<apex:page controller="QuotaController">
    
    <script type="text/javascript">
        // Hide the output component (the param). 
        // Find the corresponding input component (same index in the ID)
        // Show the input component.
        function tryHide(component) {
            component.style.display = "none";
            var outputComponentId = component.id.replace("quotaOutput","quotaInput");
            document.getElementById(outputComponentId).style.display = "inline";            
        }
        
        function pencil(component, showhide) {
            var pencilIconId = component.id.replace("quotaOutput","pencilIcon");
            document.getElementById(pencilIconId).style.display = showhide;
        }
        
    </script>
    
    <apex:form rendered="{!NOT(ForecastingEnabled)}">
        <apex:outputText style="color:red;font-weight:bold" value="{!$Label.QE_Forecasting_Disabled}"/>
    </apex:form>
    <apex:form rendered="{!ForecastingEnabled}">
    	<apex:sectionHeader title="{!$Label.QE_Title}" subtitle="{!$Label.QE_SubTitle}" />
        <apex:panelGrid columns="2">

	        <apex:outputPanel >
	            <apex:actionStatus style="color:red;font-weight:bold" id="updatingStatus" startText=" {!$Label.QE_Status_Refreshing}" stopText=""/>
           	</apex:outputPanel>
           	
           	<apex:outputPanel >
        		<apex:outputText style="color:blue" value="{!headerMessage}"/>
    		</apex:outputPanel>

			<apex:outputText style="vertical-align:middle" value="{!$Label.QE_PeriodOptions}"/>
    		
            <apex:outputPanel >
	            <apex:selectRadio value="{!periodType}">
	            	<apex:actionSupport event="onchange" reRender="options,quotaTable" status="updatingStatus"/>
	            	<apex:selectOptions value="{!availablePeriodTypes}"/>
	            </apex:selectRadio>
	        </apex:outputPanel>

			<apex:outputText value="{!$Label.QE_PeriodDateRange}"/>
			
	        <apex:outputPanel id="options" style="padding-top:15px">
	            <apex:selectList value="{!startDatePeriod}" multiSelect="false" size="1">
	                <apex:actionSupport event="onchange" reRender="quotaTable" status="updatingStatus"/>
	                <apex:selectOptions value="{!availablePeriods}"/>
	            </apex:selectList>
	            <!--<apex:commandLink action="{!showPopup}" style="color:blue" value="Using quarterly forecasts?" rerender="quarterlyPopup"/><br/>-->
	        </apex:outputPanel>
	        
	        <apex:outputPanel >
	            <apex:outputText value="{!$ObjectType.ForecastingType.Label}"/>&nbsp;
            </apex:outputPanel>
            
            <apex:outputPanel >
	            <apex:selectList value="{!selectedForecastingType}" multiSelect="false" size="1">
	                <apex:actionSupport event="onchange" reRender="quotaTable,productFamilyOutputPanel" status="updatingStatus"/>
	                <apex:selectOptions value="{!activeForecastingTypes}"/>
	            </apex:selectList>&nbsp;
	        </apex:outputPanel>

	        <apex:outputPanel id="productFamilyOutputPanel" rendered="{!isProductFamily}">
	            <apex:outputText value="{!$ObjectType.Product2.fields.Family.Label}" />&nbsp;&nbsp;&nbsp;&nbsp;
	            <apex:selectList value="{!selectedProductFamily}" id="productFamilyList" multiSelect="false" size="1" disabled="{!NOT(usesFamilies)}" >
	            <!-- rendered="{!usesFamilies}"> -->
	                <apex:actionSupport event="onchange" reRender="quotaTable" status="updatingStatus"/>
	                <apex:selectOptions value="{!productFamilies}"/>
	            </apex:selectList>
	        </apex:outputPanel>
        </apex:panelGrid>
        <!--
        <apex:outputPanel >
            <apex:selectRadio value="{!isQuantity}">
                <apex:actionSupport event="onchange" reRender="quotaTable" status="updatingStatus"/>
                <apex:selectOptions value="{!quantityOptions}"/>
            </apex:selectRadio>&nbsp;
        </apex:outputPanel>
        <apex:outputPanel >
            <apex:outputText value="Product Family quotas?"/>
            <apex:inputCheckbox value="{!isProductFamily}">
                <apex:actionSupport event="onclick" action="{!onCheckProductFamily}" reRender="productFamilyList" status="updatingStatus"/>
                <apex:actionSupport event="onchange" reRender="quotaTable" status="updatingStatus"/>                
            </apex:inputCheckbox>&nbsp;         
        -->
        <apex:outputPanel id="quarterlyPopup">
            <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}"/>
            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
                {!$Label.QE_Quarterly_explanation}
                <br/><br/>{!$Label.QE_Other_months_blank}<br/><br/><br/>
                <apex:commandButton value="{!$Label.site.submit}" action="{!closePopup}" rerender="quarterlyPopup"/>
            </apex:outputPanel>
        </apex:outputPanel>
    </apex:form><br/>
            
    <apex:form id="quotaTable" rendered="{!ForecastingEnabled}">
        <apex:pageBlock id="pageBlock" title="{!$Label.QE_Quotas_For_Period} {!startDatePeriod}">
            <apex:pageMessages />
            <apex:pageBlockButtons id="pageBlockButtons">
                <apex:commandButton value="{!$Label.site.submit}" action="{!save}" disabled="{!saveDisabled}"/>
            </apex:pageBlockButtons>
            <apex:pageBlockTable id="pageBlockTable" style="width:350px" value="{!quotas}" var="q">
                    <apex:column id="nameColumn" headerValue="{!$ObjectType.User.fields.Name.Label}">
                        <apex:outputText value="{!q.ownerName}" style="width:150px"/>
                    </apex:column>

                    <apex:column id="quotaColumn" headerValue="{!quotaColumnHeader}" style="width:110px;height:20px">
                        <apex:outputPanel >
                        <apex:inputText id="quotaInput" size="11" value="{!q.amount}"
                            style="display:{!IF(ISNULL(q.amount),'inline','none')}"/>
                        <apex:commandLink id="quotaOutput" onclick="{tryHide(this)}" value="{!q.amountString}" rerender="none" 
                            style="color:blue;text-decoration:none;display:{!IF(NOT(ISNULL(q.amount)),'inline','none')}"
                            onmouseover="{pencil(this,'inline')}" onmouseout="{pencil(this,'none')}">
                        </apex:commandLink>
                        <apex:outputPanel style="float:right">
                        <apex:image id="pencilIcon" value="/img/func_icons/util/pencil12.gif" style="display:none"/>
                        </apex:outputPanel>
                        </apex:outputPanel>
                    </apex:column>
                    <apex:column id="currencyColumn" headerValue="{!CurrencyColumnHeader}" style="width:100px" rendered="{!RenderCurrencyColumn}">
                        <apex:selectList value="{!q.currencyIsoCode}" multiSelect="false" size="1">
                            <apex:selectOptions value="{!AvailableIsoCodes}"/>
                        </apex:selectList>
                    </apex:column>
            
            </apex:pageBlockTable>
        </apex:pageBlock>
        <apex:pageBlock>
	        <apex:facet name="header">
	        	<h2>{!$Label.QE_Copy_Quota}</h2>
	    	</apex:facet>
	        
            <apex:outputText value="{!$Label.QE_Starting_Month}"/>
            <apex:selectList value="{!futurePeriod}" multiSelect="false" size="1">
                <apex:actionSupport event="onchange" reRender="applyFutureButton"/>
                <apex:selectOptions value="{!availablePeriodsForApplyFuture}"/>
            </apex:selectList>
        <apex:commandButton id="applyFutureButton" value="{!$Label.site.submit}" disabled="{!isApplyToPeriodDisabled}" action="{!applyToPeriod}" />
        </apex:pageBlock>
    </apex:form>
    
    <style type="text/css">
        .custPopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding:10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 500px;
            margin-left: -250px;
            top:100px;
        }
        .popupBackground{
            background-color:black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }
    </style>
</apex:page>